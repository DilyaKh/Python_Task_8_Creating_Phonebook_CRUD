# -------------------------------------------------------------------
# Task_8

import os



def work_with_phonebook():

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª 'phonebook.txt':
    if not os.path.exists('phonebook.txt'):
        phone_book = []
        print('''
–§–∞–π–ª —Å —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–º –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω.\n
–î–æ–±–∞–≤—å—Ç–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç\n.
–î–ª—è —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É 2.
              ''')
    else:
        phone_book = read_txt('phonebook.txt')


    while True:

        choice = show_menu()

        if choice == '1':
            show_all_contacts(phone_book, is_sorted = 'yes')
        elif choice == '2':
            add_contact(phone_book)
            write_txt('phonebook.txt', phone_book) 
        elif choice == '3':
            find_contacts(phone_book)
        elif choice == '4':
            modify_contacts(phone_book)
            write_txt('phonebook.txt', phone_book)
        elif choice == '5':
            delete_contacts(phone_book)
            write_txt('phonebook.txt', phone_book)
        elif choice == '6':
            file_to_export = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ \
(–Ω–∞–ø—Ä–∏–º–µ—Ä, phonebook_copy.txt): ')
            export_contacts(file_to_export, 'phonebook.txt')
        elif choice == '7':
            file_to_import = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ \
(–Ω–∞–ø—Ä–∏–º–µ—Ä, phonebook_from.txt): ')
            import_contacts(file_to_import, 'phonebook.txt')
        elif choice == '0':
            print('''
–†–∞–±–æ—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n\
----------------------------\n\
----------------------------\n
                  ''')
            break
        else:
            print('\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è!\
                  \n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è –∑–∞–Ω–æ–≤–æ.')



def show_menu():
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é - 
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–µ–∂–¥—É —Ü–∏—Ñ—Ä–∞–º–∏ –∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏,
    –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å,
    –∏ –≤–æ–∑–≤—Ä–∞—â–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ.
    '''

    print('''
------------------------------------------\n
–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n
1 - –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤–µ—Å—å —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫\n
2 - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç\n
3 - –ù–∞–π—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç(—ã) –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É\n
4 - –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç(—ã) –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n
5 - –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç(—ã) –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n
6 - –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª c –≤—ã–±–æ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n
7 - –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞ c –≤—ã–±–æ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n
0 - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã\n
          ''')
    
    # –ù–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –≤ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö,
    # —Ç.–∫. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ—à–∏–±–æ—á–Ω–æ –≤–≤–µ—Å—Ç–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä,
    # —Ç–µ–∫—Å—Ç, –∏ —Ç–æ–≥–¥–∞ —ç—Ç–æ –ø–æ–≤–ª–µ—á–µ—Ç –æ—à–∏–±–∫—É.
    # –ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–µ–¥–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è 
    # –Ω–µ –±—É–¥–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–º –≤ –º–µ–Ω—é –Ω–æ–º–µ—Ä–∞–º. 
    choice = input()
    print()

    return choice



def read_txt(filename):
    '''
    –§—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–æ—Å—Ç—Ä–æ—á–Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ 
    —Ñ–∞–π–ª–∞ 'phonebook.txt'
    –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤–∞—Ä–µ–π.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π.
    '''
 
    phone_book_list = []

    headers = ['–§–∞–º–∏–ª–∏—è', '–ò–º—è', '–û—Ç—á–µ—Å—Ç–≤–æ', '–¢–µ–ª–µ—Ñ–æ–Ω', '–û–ø–∏—Å–∞–Ω–∏–µ']

    with open(filename,'r', encoding = 'utf-8') as phb:

        for line in phb:

            record = dict(zip(headers, line.strip().split(',')))          
            phone_book_list.append(record)	
    
    return phone_book_list



def show_contact(values):
    '''
    –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ –ø–µ—á–∞—Ç—å –æ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç
    –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –≤–∏–¥–µ.
    –¢.–µ. –∏–º–µ–Ω–Ω–æ –ø—Ä–∏ –ø–æ–º–æ—â–∏ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ 
    –∑–∞–¥–∞—Ç—å –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –¥–ª—è –≤—Å–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
    –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    –¥–ª—è –≤—ã–≤–æ–¥–∞ –µ–≥–æ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    '''

    return print(f'üë§ {values[0]} {values[1]} {values[2]}  \
üìû {values[3]}  üìù {values[4]}')



def show_all_contacts(phone_book_list, is_sorted = 'no'):
    '''
    –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ –ø–µ—á–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã,
    —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ—Å—è –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ,
    –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –≤–∏–¥–µ.
    –ï—Å—Ç—å —Ç–∞–∫–∂–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä sorted,
    —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É 
    –ø–æ —Ñ–∞–º–∏–ª–∏—è–º –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
    '''

    if is_sorted == 'yes':
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ñ–∞–º–∏–ª–∏—è–º –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ:
        phone_book_list = sorted(phone_book_list, key = lambda x: list(x.values())[0])

    for i in enumerate(phone_book_list, 1):
        print(i[0], end = '')
        print('.', end = ' ')
        show_contact(list(i[1].values()))
            
    

def write_txt(filename, phone_book_list):
    '''
    –§—É–Ω–∫—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å 
    —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ —Ñ–∞–π–ª 'phonebook.txt' 
    —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.
    '''

    with open(filename, 'w', encoding = 'utf-8') as phout:

        for i in phone_book_list:
            s = ''

            for v in i.values():
                s = s + v + ','

            phout.write(f'{s[:-1]}\n')



def get_data():
    '''
    –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ç–∞–∫—Ç–∞
    –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
    '''

    last_name = input('–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é: ')
    first_name = input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ')
    surname = input('–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ: ')
    phone_number = input('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ +79123456789): ')
    phone_descr = input('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞: ')
    print('\n–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
    
    data_list = [last_name, first_name, surname, phone_number, phone_descr]
    return data_list



def add_contact(phone_book_list):
    '''
    –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ —Å–ø–∏—Å–∫—É —Å–ª–æ–≤–∞—Ä–µ–π,
    —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤,
    –Ω–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å (—Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞).
    '''
    headers = ['–§–∞–º–∏–ª–∏—è', '–ò–º—è', '–û—Ç—á–µ—Å—Ç–≤–æ', '–¢–µ–ª–µ—Ñ–æ–Ω', '–û–ø–∏—Å–∞–Ω–∏–µ']
    record = dict(zip(headers, get_data()))
    phone_book_list.append(record)



def find_parameters():
    '''
    –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    –ø–æ –∫–∞–∫–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
    –∏ –Ω–æ–º–µ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞.
    '''

    print('–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞:')
    parameter_num = input('1 - –ø–æ —Ñ–∞–º–∏–ª–∏–∏\
                            \n2 - –ø–æ –∏–º–µ–Ω–∏\
                            \n3 - –ø–æ –æ—Ç—á–µ—Å—Ç–≤—É\
                            \n4 - –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞\
                            \n5 - –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é\n')
    print()

    parameter_input = None

    if parameter_num == '1':
        parameter_input = input('–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞: ')
    elif parameter_num == '2':
        parameter_input = input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –ø–æ–∏—Å–∫–∞: ')
    elif parameter_num == '3':
        parameter_input = input('–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞: ')
    elif parameter_num == '4':
        parameter_input = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞: ')
    elif parameter_num == '5':
        parameter_input = input('–í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞: ')
        print()
    return parameter_input, parameter_num



def find_contacts(phone_book_list):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É
    –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ –ø–µ—á–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã.
    –ï—Å–ª–∏ –∂–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã,
    –æ–± —ç—Ç–æ–º –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ.
    '''

    parameter_input, parameter_num = find_parameters()

    contacts_found = []

    for i in phone_book_list:
        if list(i.values())[int(parameter_num) - 1].lower() == \
            parameter_input.lower():
            contacts_found.append(i)

    if len(contacts_found) == 0:
        print('–ü–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    else:
        print('\n–ù–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ:')
        show_all_contacts(contacts_found)
    print()



def modify_contacts(phone_book_list):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ 
    –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.
    '''

    print('–°–Ω–∞—á–∞–ª–∞ –æ—Å—É—â–µ—Å—Ç–≤–∏–º –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞(–æ–≤) \
–ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É.')

    parameter_input, parameter_num = find_parameters()

    contacts_found = []

    for i in phone_book_list:
        if list(i.values())[int(parameter_num) - 1].lower() == \
            parameter_input.lower():
            contacts_found.append(i)

    if len(contacts_found) == 0:
        print('–ü–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    else:
        print('\n–ù–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ:')

        for i in enumerate(contacts_found, 1):
            print(i[0], end = '')
            print('.', end = ' ')
            show_contact(list(i[1].values()))
        
        num_to_modify = -1


        while True:

            num_to_modify = int(input('\n–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞, \
–∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å.\n(–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞–∂–º–∏—Ç–µ 0): '))
            
            if num_to_modify == 0:
                break

            contact_to_change = contacts_found[num_to_modify - 1]
        
            print('\n–í—ã–±—Ä–∞–Ω–æ:')
            show_contact(list(contact_to_change.values()))
            

            
            parameter_num = None

            while parameter_num != 's':

                print('\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è.\n(–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–∞–∂–º–∏—Ç–µ s): ')

                parameter_num = input('1 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ —Ñ–∞–º–∏–ª–∏–∏\
                                \n2 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏\
                                \n3 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ –æ—Ç—á–µ—Å—Ç–≤—É\
                                \n4 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞\
                                \n5 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é\
                                \ns - –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ\n')
                print()
            
                parameter_input = None

                if parameter_num == '1':
                    parameter_input = input('–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: ')
                elif parameter_num == '2':
                    parameter_input = input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: ')
                elif parameter_num == '3':
                    parameter_input = input('–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: ')
                elif parameter_num == '4':
                    parameter_input = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: ')
                elif parameter_num == '5':
                    parameter_input = input('–í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: ')
                elif parameter_num == 's':
                    break
                print()

                headers_dict = {'1': '–§–∞–º–∏–ª–∏—è', '2': '–ò–º—è', '3': '–û—Ç—á–µ—Å—Ç–≤–æ', \
                                    '4': '–¢–µ–ª–µ—Ñ–æ–Ω' , '5': '–û–ø–∏—Å–∞–Ω–∏–µ'}
                    

                phone_book_list.remove(contact_to_change)

                contact_to_change[headers_dict[parameter_num]] = parameter_input

                phone_book_list.append(contact_to_change)



def delete_contacts(phone_book_list):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ 
    –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.
    '''

    print('–°–Ω–∞—á–∞–ª–∞ –æ—Å—É—â–µ—Å—Ç–≤–∏–º –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞(–æ–≤) \
–ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É.')

    parameter_input, parameter_num = find_parameters()

    contacts_found = []

    for i in phone_book_list:
        if list(i.values())[int(parameter_num) - 1].lower() == \
            parameter_input.lower():
            contacts_found.append(i)

    if len(contacts_found) == 0:
        print('–ü–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    else:
        print('\n–ù–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ:')

        for i in enumerate(contacts_found, 1):
            print(i[0], end = '')
            print('.', end = ' ')
            show_contact(list(i[1].values()))
        

        num_to_delete = -1
        len_to_check = len(contacts_found)

        while True:

            if len_to_check == 0:
                print('–í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.')
                break
        
            num_to_delete = input('\n–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞, \
–∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.\n–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å—Ä–∞–∑—É,\n\
—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∏—Ö –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n(–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏–π –Ω–∞–∂–º–∏—Ç–µ 0): ')
            
            if num_to_delete == '0':
                break

            num_to_delete_list = map(int, num_to_delete.split())


            for num in num_to_delete_list:

                contact_to_delete = contacts_found[num - 1]
            
                print('\n–í—ã–±—Ä–∞–Ω–æ:')
                show_contact(list(contact_to_delete.values()))
                
                phone_book_list.remove(contact_to_delete)
                len_to_check -= 1
                
                print('\n–ö–æ–Ω—Ç–∞–∫—Ç —É–¥–∞–ª–µ–Ω.')



def export_contacts(file_to_export, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª,
    –∏—Å—Ö–æ–¥—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
    '''

    while True:
        print('\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: ')
        export_choice = input('''
1 - –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª\
\n2 - –ò–∑ –≤—Å–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ \
–≤—ã–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –ø–æ –∏—Ö –Ω–æ–º–µ—Ä–∞–º \
\n3 - –°–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞—Ç—å –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, \
–∞ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã\
\n4 - –°–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞—Ç—å –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, \
–∞ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ –Ω–æ–º–µ—Ä–∞–º –∫–æ–Ω—Ç–∞–∫—Ç—ã\
\n00 - –í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö\n
''')


        if export_choice == '1':
            export_all(file_to_export, filename)
        elif export_choice == '2':
            export_chosen(file_to_export, filename)
        elif export_choice == '3':
            find_export_all(file_to_export, filename)
        elif export_choice == '4':
            find_export_chosen(file_to_export, filename)
        elif export_choice == '00':
            print('–†–∞–±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞.')
            break



def export_all(file_to_export, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ 
    –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª.
    –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª 
    –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π.
    '''

    with open(file_to_export, 'a', encoding = 'utf-8') as new_file, \
        open(filename, 'r', encoding = 'utf-8') as main_file:
        contacts_to_add = main_file.readlines()
        new_file.writelines(contacts_to_add)
    
    print('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.')



def export_chosen(file_to_export, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª:
    –ò–∑ –≤—Å–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    –≤—ã–±–∏—Ä–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –ø–æ –∏—Ö –Ω–æ–º–µ—Ä–∞–º.
    –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª
    –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π.
    '''

    phone_book_list = read_txt(filename)

    show_all_contacts(phone_book_list)
    print()

    while True:
        num_to_export = input('\n–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞, \
–∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å.\n–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å—Ä–∞–∑—É,\n\
—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∏—Ö –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n(–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ d): ')
            
        if num_to_export == 'd':
            break

        num_to_export_list = map(int, num_to_export.split())

        contacts_export = []

        for i in num_to_export_list:
            contacts_export.append(phone_book_list[i - 1])

        with open(file_to_export, 'a', encoding = 'utf-8') as new_file:
            for i in contacts_export:
                s = ''

                for v in i.values():
                    s = s + v + ','

                new_file.write(f'{s[:-1]}\n')

        print('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.')



def find_export_all(file_to_export, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª,
    –∏—Å—Ö–æ–¥—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:
    c–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–µ—Ç—Å—è –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, \
    –∞ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–Ω–æ—Å—è—Ç—Å—è –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã.
    –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª
    –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π.
    '''

    phone_book_list = read_txt(filename)


    parameter_input, parameter_num = find_parameters()

    contacts_found = []

    for i in phone_book_list:
        if list(i.values())[int(parameter_num) - 1].lower() == \
            parameter_input.lower():
            contacts_found.append(i)

    if len(contacts_found) == 0:
        print('–ü–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    else:
        print('\n–ù–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ:')
        show_all_contacts(contacts_found)
    print()


    print('\n–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã?: ')
    export_yes_no = input('1 - –î–∞, 2 - –ù–µ—Ç: ')

    if export_yes_no == '2':
         return print('–†–∞–±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.')
    elif export_yes_no == '1':

        with open(file_to_export, 'a', encoding = 'utf-8') as new_file:
            for i in contacts_found:
                s = ''

                for v in i.values():
                    s = s + v + ','

                new_file.write(f'{s[:-1]}\n')

        print('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.')



def find_export_chosen(file_to_export, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª,
    –∏—Å—Ö–æ–¥—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:
    c–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–µ—Ç—Å—è –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, \
    –∞ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–Ω–æ—Å—è—Ç—Å—è –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã.
    –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª
    –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π.
    '''

    phone_book_list = read_txt(filename)


    parameter_input, parameter_num = find_parameters()

    contacts_found = []

    for i in phone_book_list:
        if list(i.values())[int(parameter_num) - 1].lower() == \
            parameter_input.lower():
            contacts_found.append(i)

    if len(contacts_found) == 0:
        print('–ü–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    else:
        print('\n–ù–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ:')
        show_all_contacts(contacts_found)
    print()


    while True:
        num_to_export = input('\n–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞, \
–∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å.\n–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å—Ä–∞–∑—É,\n\
—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∏—Ö –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n(–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ d): ')
            
        if num_to_export == 'd':
            break

        num_to_export_list = map(int, num_to_export.split())

        contacts_found_export = []

        for i in num_to_export_list:
            contacts_found_export.append(contacts_found[i - 1])

        with open(file_to_export, 'a', encoding = 'utf-8') as new_file:
            for i in contacts_found_export:
                s = ''

                for v in i.values():
                    s = s + v + ','

                new_file.write(f'{s[:-1]}\n')

        print('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.')

    

def import_contacts(file_to_import, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞,
    –∏—Å—Ö–æ–¥—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
    '''

    while True:
        print('\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: ')
        import_choice = input('''
1 - –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞\
\n2 - –ò–∑ –≤—Å–µ–≥–æ —Ñ–∞–π–ª–∞ –≤—ã–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã \
–¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –ø–æ –∏—Ö –Ω–æ–º–µ—Ä–∞–º\
\n3 - –°–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞—Ç—å –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, \
–∞ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã\
\n4 - –°–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞—Ç—å –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, \
–∞ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ –Ω–æ–º–µ—Ä–∞–º –∫–æ–Ω—Ç–∞–∫—Ç—ã\
\n00 - –í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö\n
''')


        if import_choice == '1':
            import_all(file_to_import, filename)
        elif import_choice == '2':
            import_chosen(file_to_import, filename)
        elif import_choice == '3':
            find_import_all(file_to_import, filename)
        elif import_choice == '4':
            find_import_chosen(file_to_import, filename)
        elif import_choice == '00':
            print('–†–∞–±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞.')
            break



def import_all(file_to_import, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ 
    –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞ (file_to_import).
    –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–∞–π–ª (filename)
    –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π.
    '''

    with open(file_to_import, 'r', encoding = 'utf-8') as new_file, \
        open(filename, 'a', encoding = 'utf-8') as main_file:
        contacts_to_add = [(i.strip() + '\n') for i in new_file.readlines()]
        main_file.writelines(contacts_to_add)
    
    print('–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.')



def import_chosen(file_to_import, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ 
    –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞:
    –∏–∑ –≤—Å–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    –≤—ã–±–∏—Ä–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –ø–æ –∏—Ö –Ω–æ–º–µ—Ä–∞–º.
    –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–∞–π–ª
    –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π.
    '''

    phone_book_list = read_txt(file_to_import)

    show_all_contacts(phone_book_list)
    print()

    while True:
        num_to_import = input('\n–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞, \
–∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å.\n–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å—Ä–∞–∑—É,\n\
—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∏—Ö –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n(–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ d): ')
            
        if num_to_import == 'd':
            break

        num_to_import_list = map(int, num_to_import.split())

        contacts_import = []

        for i in num_to_import_list:
            contacts_import.append(phone_book_list[i - 1])

        with open(filename, 'a', encoding = 'utf-8') as main_file:
            for i in contacts_import:
                s = ''

                for v in i.values():
                    s = s + v + ','

                main_file.write(f'{s[:-1]}\n')

        print('–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.')



def find_import_all(file_to_import, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ 
    –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞,
    –∏—Å—Ö–æ–¥—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:
    c–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–µ—Ç—Å—è –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, \
    –∞ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–Ω–æ—Å—è—Ç—Å—è –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã.
    –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–∞–π–ª
    –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π.
    '''

    phone_book_list = read_txt(file_to_import)


    parameter_input, parameter_num = find_parameters()

    contacts_found = []

    for i in phone_book_list:
        if list(i.values())[int(parameter_num) - 1].lower() == \
            parameter_input.lower():
            contacts_found.append(i)

    if len(contacts_found) == 0:
        print('–ü–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    else:
        print('\n–ù–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ:')
        show_all_contacts(contacts_found)
    print()


    print('\n–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤ —Ñ–∞–π–ª –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã?: ')
    export_yes_no = input('1 - –î–∞, 2 - –ù–µ—Ç: ')

    if export_yes_no == '2':
         return print('–†–∞–±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –∏–º–ø–æ—Ä—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.')
    elif export_yes_no == '1':

        with open(filename, 'a', encoding = 'utf-8') as main_file:
            for i in contacts_found:
                s = ''

                for v in i.values():
                    s = s + v + ','

                main_file.write(f'{s[:-1]}\n')

        print('–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.')



def find_import_chosen(file_to_import, filename):
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ —Ñ–∞–π–ª,
    –∏—Å—Ö–æ–¥—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:
    c–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–µ—Ç—Å—è –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, \
    –∞ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–Ω–æ—Å—è—Ç—Å—è –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã.
    –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–∞–π–ª
    –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π.
    '''

    phone_book_list = read_txt(file_to_import)


    parameter_input, parameter_num = find_parameters()

    contacts_found = []

    for i in phone_book_list:
        if list(i.values())[int(parameter_num) - 1].lower() == \
            parameter_input.lower():
            contacts_found.append(i)

    if len(contacts_found) == 0:
        print('–ü–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    else:
        print('\n–ù–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ:')
        show_all_contacts(contacts_found)
    print()


    while True:
        num_to_import = input('\n–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞, \
–∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å.\n–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å—Ä–∞–∑—É,\n\
—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∏—Ö –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n(–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ d): ')
            
        if num_to_import == 'd':
            break

        num_to_import_list = map(int, num_to_import.split())

        contacts_found_import = []

        for i in num_to_import_list:
            contacts_found_import.append(contacts_found[i - 1])

        with open(filename, 'a', encoding = 'utf-8') as main_file:
            for i in contacts_found_import:
                s = ''

                for v in i.values():
                    s = s + v + ','

                main_file.write(f'{s[:-1]}\n')

        print('–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.')



# -------------------------------------------



work_with_phonebook()

# -------------------------------------------------------------------------
